{
	"info": {
		"_postman_id": "bd844de3-5cec-4dd8-a04c-ff7bafb264fa",
		"name": "RunUsingNewman",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34113509"
	},
	"item": [
		{
			"name": "Create_User",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Verify Status Code',function(){\r",
							" //assertion\r",
							"    pm.response.to.have.status(201);\r",
							"})\r",
							"\r",
							"pm.test(\"Verify Status Code as 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"Created\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 1500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1500);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Date Header is present\", function () {\r",
							"    pm.response.to.have.header(\"Date\");\r",
							"});\r",
							"pm.test(\"X-request-id Header is present\", function () {\r",
							"    pm.response.to.have.header(\"x-request-id\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Name of the created user\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql('Rohit ProdUser');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "f2d4c57ef39a0a1243eb962b4231acc310a136226e08eb5cc34308b08b1d2fad",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"{{envUserName}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"gender\": \"male\",\r\n  \"status\": \"active\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://gorest.co.in/public/v2/users",
					"protocol": "https",
					"host": [
						"gorest",
						"co",
						"in"
					],
					"path": [
						"public",
						"v2",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All suers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"var jsonData=pm.response.json();//Storing response in Local variable.\r",
							"console.log(jsonData.length);\r",
							"pm.test(\"Check all users are inactive\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    for(let i=0;i<jsonData.length;i++){\r",
							"        pm.expect(jsonData[i].status).to.eql(\"active\");\r",
							"        //console.log(jsonData[i].status);\r",
							"    }\r",
							"    \r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "f2d4c57ef39a0a1243eb962b4231acc310a136226e08eb5cc34308b08b1d2fad",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://gorest.co.in/public/v2/users?gender=male&status=inactive",
					"protocol": "https",
					"host": [
						"gorest",
						"co",
						"in"
					],
					"path": [
						"public",
						"v2",
						"users"
					],
					"query": [
						{
							"key": "gender",
							"value": "male"
						},
						{
							"key": "status",
							"value": "inactive"
						}
					]
				}
			},
			"response": []
		}
	]
}